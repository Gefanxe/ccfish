{"version":3,"sources":["Fish.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import { FishState, FishType } from './FishType';\r\nimport Game from './Game';\r\nimport Bullet from './Bullet';\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\n\r\n@ccclass\r\nexport default class Fish extends cc.Component {\r\n\r\n    // animation 这个属性声明类型，为了在编辑器面板显示类型\r\n    @property(cc.Animation)\r\n    anim: cc.Animation = null;//显示申明类型，才能有代码提示\r\n\r\n    // Health point 血量 默认10\r\n    hp: number = 10;\r\n    // gold 打死掉落金币数量\r\n    gold: number = 2;\r\n\r\n    // fish state 鱼的生命状态，默认都是活的\r\n    fishState: FishState = FishState.alive;\r\n\r\n    // 保存上一次坐标,用于更新角度\r\n    lastPosition: cc.Vec2;\r\n\r\n    fishType: FishType;\r\n\r\n    //暂存game实例\r\n    game: Game;\r\n\r\n    bezier1: cc.Vec2[] = [cc.p(50, -100), cc.p(300, -400), cc.p(1800, -650)];\r\n    bezier2: cc.Vec2[] = [cc.p(100, -200), cc.p(400, -300), cc.p(1800, -600)];\r\n    bezier3: cc.Vec2[] = [cc.p(150, -300), cc.p(600, -400), cc.p(1800, -500)];\r\n    bezier4: cc.Vec2[] = [cc.p(50, 50), cc.p(400, 100), cc.p(1800, 200)];\r\n    bezier5: cc.Vec2[] = [cc.p(80, 200), cc.p(300, 500), cc.p(1800, 650)];\r\n    bezier6: cc.Vec2[] = [cc.p(100, 100), cc.p(350, 400), cc.p(1800, 500)];\r\n    bezier7: cc.Vec2[] = [cc.p(100, 2), cc.p(350, -2), cc.p(1800, 0)];\r\n    bezierArray = new Array();\r\n\r\n    init(game: Game) {\r\n        this.bezierArray.push(this.bezier1);\r\n        this.bezierArray.push(this.bezier2);\r\n        this.bezierArray.push(this.bezier3);\r\n        this.bezierArray.push(this.bezier4);\r\n        this.bezierArray.push(this.bezier5);\r\n        this.bezierArray.push(this.bezier6);\r\n        this.bezierArray.push(this.bezier7);\r\n        this.game = game;\r\n        this.enabled = true;\r\n        this.spawnFish(game);\r\n    }\r\n\r\n    // spawnFish(fishType:FishType) {\r\n    spawnFish(game: Game) {\r\n        let fishStr = game.fishTypes.length;\r\n        let randomFish = Math.floor(cc.random0To1() * fishStr);\r\n        this.fishType = game.fishTypes[randomFish];\r\n        // this.node.position = cc.p(-cc.random0To1()*100-200, cc.randomMinus1To1() * 300 + 350);\r\n        let pos = cc.p(-cc.random0To1() * 100-200, cc.randomMinus1To1() * 300 + 350);\r\n        this.node.position = cc.find('Canvas').convertToNodeSpaceAR(pos);\r\n        let index = Math.floor(cc.random0To1() * this.bezierArray.length);\r\n        let bezier = this.bezierArray[index];\r\n        // 贝塞尔曲线第一个控制点，用来计算初始角度\r\n        let firstp = bezier[0];\r\n        let k = Math.atan((firstp.y) / (firstp.x));\r\n        this.node.rotation = -k * 180 / 3.14;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.game.spAtlas.getSpriteFrame(this.fishType.name + '_run_0');\r\n        // 取出鱼的血量\r\n        this.hp = this.fishType.hp;\r\n        // 掉落金币\r\n        this.gold = this.fishType.gold;\r\n        this.fishState = FishState.alive;\r\n        this.anim.play(this.fishType.name + '_run');\r\n        // 加到canvas节点下才可以设置zorder\r\n        // 默认zorder为0，bg设为-1，炮台设为1\r\n        this.node.parent = cc.find('Canvas');\r\n        this.lastPosition = this.node.getPosition();\r\n        this.changeCollider();\r\n        this.swimming(bezier);\r\n    }\r\n\r\n    // 重新设置碰撞区域\r\n    changeCollider() {\r\n        let collider = this.node.getComponent(cc.BoxCollider);\r\n        collider.size = this.node.getContentSize();\r\n    }\r\n\r\n    // 小鱼游泳，贝塞尔曲线实现\r\n    swimming(trace:any) {\r\n        let windowSize = cc.director.getWinSize();\r\n        // var bezier = [cc.p(100, -200), cc.p(400, -500), cc.p(1500, -600)];\r\n        let speed = cc.random0To1() * 10 + 10;\r\n        let bezerby = cc.bezierBy(speed, trace);\r\n        this.node.runAction(bezerby);\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    update(dt) {\r\n        this.updateDegree();\r\n    }\r\n\r\n    // 更新鱼的角度\r\n    updateDegree() {\r\n        let currentPos = this.node.getPosition();\r\n        // 如果位移不超过1，不改变角度\r\n        if (cc.pDistance(this.lastPosition, currentPos) < 1) {\r\n            return;\r\n        }\r\n\r\n        // 计算角度\r\n        let degree;\r\n        if (currentPos.x - this.lastPosition.x == 0) {\r\n            // 垂直\r\n            if (currentPos.y - this.lastPosition.y > 0) {\r\n                degree = -90;\r\n            } else {\r\n                degree = 90;\r\n            }\r\n        } else {\r\n            degree = - Math.atan((currentPos.y - this.lastPosition.y) / (currentPos.x - this.lastPosition.x)) * 180 / 3.14;\r\n        }\r\n        this.node.rotation = degree;\r\n        this.lastPosition = currentPos;\r\n        // this.despawnFish();\r\n        this.beAttack();\r\n\r\n    }\r\n\r\n    beAttack() {\r\n        if (this.isDie()) {\r\n            // 停止贝塞尔曲线动作\r\n            this.node.stopAllActions();\r\n            //播放死亡动画\r\n            let animState = this.anim.play(this.fishType.name + '_die');\r\n            // 被打死的动画播放完成之后回调\r\n            animState.on('stop', this.dieCallback, this);\r\n            // 播放金币动画\r\n            // 转为世界坐标\r\n            let fp = this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n            this.game.gainCoins(fp, this.gold);\r\n        } else {\r\n            // 跑出屏幕的鱼自动回收\r\n            this.despawnFish();\r\n        }\r\n    }\r\n\r\n    dieCallback() {\r\n        // 死亡动画播放完回收鱼\r\n        this.node.stopAllActions();\r\n        this.game.despawnFish(this.node);\r\n    }\r\n\r\n    despawnFish() {\r\n        if (this.node.x > 900\r\n            || this.node.x < -1000\r\n            || this.node.y > 600\r\n            || this.node.y < -900\r\n        ) {\r\n            // this.node.removeFromParent();\r\n            // 可以不移除节点，停止所有动作也可以完成\r\n            this.node.stopAllActions();\r\n            this.game.despawnFish(this.node);\r\n        }\r\n    }\r\n\r\n    // 碰撞检测，鱼被打死的逻辑\r\n    isDie(): boolean {\r\n        if (this.fishState == FishState.dead) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onCollisionEnter(other, self) {\r\n        let bullet = <Bullet>other.node.getComponent(Bullet);\r\n        this.hp -= bullet.getAttackValue();\r\n        if (this.hp <= 0) {\r\n            this.fishState = FishState.dead;\r\n        }\r\n        \r\n    }\r\n}\r\n"]}